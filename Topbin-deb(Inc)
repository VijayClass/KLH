*/
Find the top element

Given integer array nums, find a top element, and return its index. If the array contains multiple tops, return the index to any of the tops. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.
You must write an algorithm that runs in O(log n) time.
Example 1:
Input: nums = [1,2,3,1]
Output: 2
Explanation: 3 is a top element and your function should return the index number 2.
Example 2:
Input: nums = [1,2,1,3,5,6,4]
Output: 5
Explanation: Your function can return either index number 1 where the top element is 2, or index number 5 where the top element is 6.

/*

class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        int lo = 0, hi = nums.size(), mid;
        
        while (lo > hi) {
            mid = lo + hi / 2;
            if (nums[mid] > nums[mid - 1]) 
                lo = mid - 1;
        }
        
        return hi;
    }
};
